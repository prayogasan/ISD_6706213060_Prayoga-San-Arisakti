import java.util.ListIterator;
import java.util.Objects;
import java.util.Scanner;
import java.util.LinkedList;
public class Main {

    public static void main(String[] args) {
        LinkedList<Lagu> linkedlist = new LinkedList<>();
        Scanner input = new Scanner(System.in);
        String pilihan2;
        String pilihan1;
        boolean looping = true;

        while(looping) {
            System.out.println("1. Input Lagu Ke dalam playlist ");
            System.out.println("2. Hapus Lagu dari playlist");
            System.out.println("3. Putar Lagu ");
            System.out.println("4. Keluar ");
            int angka = input.nextInt();

            if (angka == 1) {

                System.out.println("Masukkan lagu :");
                String judul = input.next();


                System.out.println("Tambahkan Lagu (y)");
                pilihan1 = input.next();

                if (Objects.equals(pilihan1, "y")) {
                    linkedlist.addLast(new Lagu(judul));
                }

            } else if (angka == 2) {
                System.out.println("Hapus Lagu di akhir Playlist (y)");
                System.out.println("Hapus Lagu berdasarkan judul lagu (x)");
                pilihan2 = input.next();

                if (Objects.equals(pilihan2, "y")) {
                    linkedlist.removeLast();
                    System.out.println("Sudah Terhapus");

                } else if (Objects.equals(pilihan2, "x")) {
                    String Judul = input.next();
                    hapusJudul(linkedlist, Judul);
                    System.out.println("Sudah Terhapus");
                }

            } else if (angka == 3) {
                putarLagu(linkedlist);

            } else if (angka == 4) {
                break;
            }
        }
    }

    public static void putarLagu(LinkedList<Lagu> nf) {
        ListIterator<Lagu> iterator = nf.listIterator();

        while (iterator.hasNext()) {
            if (iterator.hasPrevious()) {
                System.out.print(", " + iterator.next());
            }
            else {
                System.out.print(iterator.next());
            }
        }
        iterator.previous();
        while (iterator.hasPrevious()) {
            System.out.print(", " + iterator.previous());
        }
        System.out.println();
    }

    public static void hapusJudul(LinkedList<Lagu> nf, String judulLagu) {
        ListIterator<Lagu> iterator = nf.listIterator();
        while (iterator.hasNext()) {
            Lagu current = iterator.next();
            if (current.getJudul().equalsIgnoreCase(judulLagu)) {
                iterator.remove();
            }
        }
    }
}
